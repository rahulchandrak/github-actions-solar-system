name: Solar System Workflow

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'
env:
  MONGO_URI: mongodb+srv://supercluster.d83jj.mongodb.net/superData
  MONGO_USERNAME: superuser
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
jobs:
    unit-testing:
        name: Unit Testing
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version
          uses: actions/setup-node@v4
          with:
            node-version: 20
    
        - name: Install Dependencies
          run: npm install
    
        - name: Unit Testing
          run: npm test
          
        - name: Archive Test Result
          if: always()
          uses: actions/upload-artifact@v4
          with:
            name: Mocha-Test-Result
            path: test-results.xml
    code-coverage:
      name: code coverage
      runs-on: ubuntu-latest
      steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Setup NodeJS Version
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Cache NPM Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: '${{ runner.os }}-node-modules-${{ hashFiles(''package-lock.json'') }}'
      - name: Install Dependencies
        run: npm install
      - name: Run Code Coverage
        run: npm run coverage
        continue-on-error: true
      - name: Upload code coverage Result
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Code-Coverage-Result
          path: coverage
          retention-days: 5
    docker:
      name: docker
      runs-on: ubuntu-latest
      needs: 
        - unit-testing
        - code-coverage
      steps:
      - name : checkout
        uses: actions/checkout@v4
     
      - name: login 
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: '${{ github.repository_owner }}'
          password: '${{ secrets.GITHUB_TOKEN }}'
      - name: docker-build-push-action
        uses: docker/build-push-action@v6
        with:
         context: .
         push: true
         tags: 'ghcr.io/${{ github.repository_owner }}/solar-system:${{ github.sha }}' 
    
    dev-deploy:
      name: dev-deploy
      runs-on: ubuntu-latest
      needs: docker
      environment:
        name: development
      steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: setup kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: v1.28.1
      - name: setcontext
        uses: azure/k8s-set-context@v3
        with:
          method: kubeconfig
          kubeconfig: '${{ secrets.KUBECONFIG }}'

      - name: run kubectl
        run: kubectl version -o yaml
        continue-on-error: true

